using System;
using System.Collections.Generic;
using System.Windows;
using System.Windows.Controls;
using Styx;
using Uranus;

namespace Aion.View
{
    /// <summary>
    /// Interaction logic for EntryEditPage.xaml
    /// </summary>
    public partial class ShiftEntryPage
    {
        public ShiftEntryPage(Helios helios, Charon charon)
        {
            InitializeComponent();
            VM.SetDataSources(helios, charon);
        }

        private readonly Style centerStyle = new()
        {
            TargetType = typeof(TextBlock),
            Setters =
            {
                new Setter(TextBlock.TextAlignmentProperty, TextAlignment.Center),
            }
        };

        private void Entries_AutoGeneratingColumn(object sender, DataGridAutoGeneratingColumnEventArgs e)
        {
            var headerName = e.Column.Header.ToString();

            //Cancel the column you don't want to generate
            if (new List<string> { "ID", "StartShiftClockID", "StartLunchClockID", "EndLunchClockID", "EndShiftClockID", "ClockEvents" }.Contains(headerName))
            {
                e.Cancel = true;
            }

            //update column details when generating
            if (headerName == "AssociateNumber")
            {
                e.Column.Header = "Associate Number";
                e.Column.IsReadOnly = true;
            }
            else if (headerName == "Name")
            {
                e.Column.Width = 150;
                e.Column.IsReadOnly = true;
            }
            else if (headerName == "ShiftTypeAlpha")
            {
                e.Column.Width = 80;
                e.Column.Header = "Shift\n(D/M/A)";
            }
            else if (headerName == "TimeTotal")
            {
                e.Column.Width = 80;
                e.Column.Header = "Total";
                ((DataGridTextColumn) e.Column).Binding.StringFormat = "HH:mm";
            }
            else if (headerName == "HoursWorked")
            {
                e.Column.Width = 80;
                e.Column.Header = "Time Worked";
                ((DataGridTextColumn) e.Column).Binding.StringFormat = "0.00";
            }
            else if (headerName == "Comments")
                e.Column.Width = new(1, DataGridLengthUnitType.Star);
            else if (headerName is "Day" or "Date")
                e.Column.Width = 100;
            else
                e.Column.Width = 80;

            if (e.Column is DataGridTextColumn column && headerName != "Comments") column.ElementStyle = centerStyle;
        }

        private void Entries_AutoGeneratedColumns(object sender, EventArgs e)
        {
            var grid = (DataGrid)sender;
            foreach (var item in grid.Columns)
            {
                switch (item.Header.ToString())
                {
                    case "Associate Number":
                        item.DisplayIndex = 0;
                        break;
                    case "Name":
                        item.DisplayIndex = 1;
                        break;
                    case "Location":
                        item.DisplayIndex = 2;
                        break;
                    case "Date":
                        item.DisplayIndex = 3;
                        break;
                    case "Day":
                        item.DisplayIndex = 4;
                        break;
                    case "In":
                        item.DisplayIndex = 5;
                        break;
                    case "Out - Lunch":
                        item.DisplayIndex = 6;
                        break;
                    case "In - Lunch":
                        item.DisplayIndex = 7;
                        break;
                    case "Out":
                        item.DisplayIndex = 8;
                        break;
                    case "Shift\n(D/M/A)":
                        item.DisplayIndex = 9;
                        break;
                    case "Total":
                        item.DisplayIndex = 10;
                        break;
                    case "Time Worked":
                        item.DisplayIndex = 11;
                        break;
                    case "Comments":
                        item.DisplayIndex = 12;
                        break;
                }
            }
        }
    }
}
