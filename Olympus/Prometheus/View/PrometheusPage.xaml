<Page x:Class="Olympus.Prometheus.View.PrometheusPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      mc:Ignorable="d" 
      d:DesignHeight="450" d:DesignWidth="800"
      Title="Prometheus"
      HorizontalAlignment="Stretch"
      VerticalAlignment="Stretch">

    <Grid Background="#533">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" MinWidth="200"/>
            <ColumnDefinition Width="5*" MinWidth="200"/>
        </Grid.ColumnDefinitions>

        <TreeView Name="tableView" Grid.Row="0" Grid.Column="0" Grid.RowSpan="3" Margin="2,2,2,2" Height="Auto" 
                  ScrollViewer.CanContentScroll="True" ScrollViewer.VerticalScrollBarVisibility="Auto">
            <TreeViewItem Header="Staff">
                <TreeViewItem Header="Borrow Employees"  Tag="Staff,borrowsEmp"/>
                <TreeViewItem Header="Clan"  Tag="Staff,clan"/>
                <TreeViewItem Header="Department"  Tag="Staff,department"/>
                <TreeViewItem Header="Employee"  Tag="Staff,employee"/>
                <TreeViewItem Header="Induction"  Tag="Staff,induction"/>
                <TreeViewItem Header="Induction Reference"  Tag="Staff,inductionReference"/>
                <TreeViewItem Header="Licence"  Tag="Staff,licence"/>
                <TreeViewItem Header="Locker"  Tag="Staff,locker"/>
                <TreeViewItem Header="Owns Car"  Tag="Staff,ownsCar"/>
                <TreeViewItem Header="Role"  Tag="Staff,role"/>
                <TreeViewItem Header="Shift"  Tag="Staff,shift"/>
                <TreeViewItem Header="Shift Rule"  Tag="Staff,shift_rule"/>
                <TreeViewItem Header="Shift Eligibility"  Tag="Staff,shiftEligibility"/>
                <TreeViewItem Header="Temp Tag"  Tag="Staff,temp_tag"/>
                <TreeViewItem Header="Uses Tag"  Tag="Staff,usesTag"/>
                <TreeViewItem Header="Vehicle"  Tag="Staff,vehicle"/>
            </TreeViewItem>
            <TreeViewItem Header="Inventory">
                <TreeViewItem Header="Bin List"  Tag="Inventory,bin"/>
                <TreeViewItem Header="Item List"  Tag="Inventory,item"/>
                <TreeViewItem Header="Bin Contents"  Tag="Inventory,stock"/>
                <TreeViewItem Header="Stock Update"  Tag="Inventory,stock_update"/>
                <TreeViewItem Header="Unit of Measure"  Tag="Inventory,uom"/>
                <TreeViewItem Header="Update Table"  Tag="Inventory,update"/>
                <TreeViewItem Header="Zone"  Tag="Inventory,zone"/>
            </TreeViewItem>
            <TreeViewItem Header="Equipment">
                <TreeViewItem Header="Battery"  Tag="Equipment,battery"/>
                <TreeViewItem Header="Battery Location"  Tag="Equipment,battery_location"/>
                <TreeViewItem Header="Charger"  Tag="Equipment,charger"/>
                <TreeViewItem Header="Charger Assignment"  Tag="Equipment,charger_assignment"/>
                <TreeViewItem Header="Checklist"  Tag="Equipment,checklist"/>
                <TreeViewItem Header="Completed Checklists"  Tag="Equipment,completed_checklist"/>
                <TreeViewItem Header="Fault"  Tag="Equipment,fault"/>
                <TreeViewItem Header="Machine"  Tag="Equipment,machine"/>
                <TreeViewItem Header="Type"  Tag="Equipment,type"/>
            </TreeViewItem>
            <TreeViewItem Header="Users">
                <TreeViewItem Header="Login"  Tag="Users,login"/>
                <TreeViewItem Header="Role"  Tag="Users,role"/>
                <TreeViewItem Header="User"  Tag="Users,user"/>
            </TreeViewItem>
        </TreeView>

        <Border BorderBrush="SlateGray" BorderThickness="1" Grid.Row="0" Grid.Column="1" Grid.RowSpan="2" Margin="2" Background="#700"/>
        <Grid Grid.Row="0" Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <Button Grid.Row="0" Grid.Column="1" Height="30" Width="30" Margin="5" HorizontalAlignment="Right" Style="{DynamicResource PageButton}">
                <Image Source="/Resources/Images/Pagination/first_button.png" Margin="5"/>
            </Button>
            <Button Grid.Row="0" Grid.Column="2" Height="30" Width="30" Margin="5" HorizontalAlignment="Right" Style="{DynamicResource PageButton}">
                <Image Source="/Resources/Images/Pagination/previous_button.png" Margin="6"/>
            </Button>
            <Label Name="PageInfo" Grid.Row="0" Grid.Column="3" Margin="5" Padding="5,3,5,3" Height="Auto" FontSize="18" HorizontalAlignment="Center" BorderBrush="Black" BorderThickness="1" Background="AliceBlue" Foreground="Black" Content="{Binding}"/>
            <Button Grid.Row="0" Grid.Column="4" Height="30" Width="30" Margin="5" HorizontalAlignment="Left" Style="{DynamicResource PageButton}">
                <Image Source="/Resources/Images/Pagination/next_button.png" Margin="6"/>
            </Button>
            <Button Grid.Row="0" Grid.Column="5" Height="30" Width="30" Margin="5" HorizontalAlignment="Left" Style="{DynamicResource PageButton}">
                <Image Source="/Resources/Images/Pagination/last_button.png" Margin="5"/>
            </Button>
            
        </Grid>


        <Grid Grid.Row="1" Grid.Column="1" >
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <Label Content="Rows Per Page:" FontFamily="Courier New" FontSize="14" HorizontalAlignment="Right" Foreground="NavajoWhite"/>

            <RadioButton Grid.Row="0" Grid.Column="1" Height="30" Width="30" Margin="20,0,20,5" HorizontalAlignment="Left" Style="{DynamicResource IPPButton}" Tag="25" IsChecked="True">25</RadioButton>
            <RadioButton Grid.Row="0" Grid.Column="2" Height="30" Width="30" Margin="20,0,20,5" HorizontalAlignment="Left" Style="{DynamicResource IPPButton}" Tag="50" >50</RadioButton>
            <RadioButton Grid.Row="0" Grid.Column="3" Height="30" Width="30" Margin="20,0,20,5" HorizontalAlignment="Left" Style="{DynamicResource IPPButton}" Tag="75" >75</RadioButton>
            <RadioButton Grid.Row="0" Grid.Column="4" Height="30" Width="30" Margin="20,0,20,5" HorizontalAlignment="Left" Style="{DynamicResource IPPButton}" Tag="100" >100</RadioButton>
            <RadioButton Grid.Row="0" Grid.Column="5" Height="30" Width="30" Margin="20,0,20,5" HorizontalAlignment="Left" Style="{DynamicResource IPPButton}" Tag="500" >500</RadioButton>

        </Grid>

            
        <DataGrid Name="DisplayData" Grid.Row="2" Grid.Column="1" Margin="1,1,1,1" Height="Auto" Width="Auto" ItemsSource="{Binding}" 
                  AutoGenerateColumns="True" ScrollViewer.CanContentScroll="True" ScrollViewer.VerticalScrollBarVisibility="Visible"
                  VerticalScrollBarVisibility="Auto" ColumnWidth="Auto" Style="{DynamicResource DataGridStyle}">
            
            <DataGrid.Resources>
                <Style TargetType="Button" x:Key="{ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}">
                    <Setter Property="Background" Value="Black" />
                </Style>
            </DataGrid.Resources>
        </DataGrid>
        
    </Grid>

    <Page.Resources>
        <!--Standard Button Styling-->
        <Style x:Key="StandardButton" TargetType="Button">
            <Setter Property="Margin" Value="5"/>
            <Setter Property="MinHeight" Value="20"/>
            <Setter Property="MinWidth" Value="20"/>
            <Setter Property="Background" Value="WhiteSmoke" />
            <Setter Property="TextBlock.TextAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontFamily" Value="Arial" />
            <Style.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="3"/>
                </Style>
            </Style.Resources>
        </Style>
        
        <!--Pagination Button Styling-->
        <Style x:Key="PageButton" TargetType="Button" BasedOn="{StaticResource StandardButton}">
            <Setter Property="Background" Value="{DynamicResource PinkGradient}" />
            <Setter Property="BorderBrush" Value="Black"/>
            <Setter Property="FontSize" Value="25"/>
        </Style>

        <!--IPP Button Styling-->
        <Style x:Key="IPPButton" TargetType="RadioButton" BasedOn="{StaticResource {x:Type ToggleButton}}">
            <Setter Property="TextBlock.TextAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontSize" Value="12" />
            <Setter Property="FontFamily" Value="Arial" />
            <Setter Property="Background" Value="{DynamicResource OrangeGradient}" />
            <Setter Property="BorderBrush" Value="Black" />
            <Style.Triggers>
                <Trigger Property="IsChecked" Value="{x:Null}">
                    <Setter Property="Background" Value="Red" />
                </Trigger>
            </Style.Triggers>
            <Style.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="3"/>
                </Style>
            </Style.Resources>
        </Style>

        <!--CornerButton-->
        <Style TargetType="Button" x:Key="{ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}">
            <Setter Property="Background" Value="Black" />
        </Style>
        <!-- DataGrid style -->
        <Style x:Key="DataGridStyle" TargetType="{x:Type DataGrid}">
            <Setter Property="ColumnHeaderStyle" Value="{DynamicResource ColumnHeaderStyle}"/>
            <Setter Property="RowHeaderStyle" Value="{DynamicResource RowHeaderStyle}" />
            <Setter Property="RowBackground" Value="{DynamicResource ResourceKey=RedGradient}" />
            <Setter Property="Background" Value="#500" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="BorderBrush" Value="SlateGray" />
            <Setter Property="RowHeight" Value="20" />
            <Setter Property="AllowDrop" Value="True" />
            <Setter Property="Block.TextAlignment" Value="Right" />
        </Style>
        <!-- DataGridColumnHeader style -->
        <Style x:Key="ColumnHeaderStyle" TargetType="DataGridColumnHeader">
            <Setter Property="Height" Value="30"/>
            <Setter Property="Padding" Value="8,0,8,0"/>
            <Setter Property="Background" Value="#500"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="TextElement.FontStretch" Value="Expanded"/>
            <Setter Property="FontSize" Value="16" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="BorderBrush" Value="Black" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="ToolTip" Value="Click to sort."/>
                </Trigger>
            </Style.Triggers>
            <Style.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="2"/>
                </Style>
                <LinearGradientBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" EndPoint="0,1" StartPoint="0,0">
                    <GradientStop Color="PaleVioletRed" Offset="0"/>
                    <GradientStop Color="MediumVioletRed" Offset="1"/>
                </LinearGradientBrush>
            </Style.Resources>
        </Style>
        <!-- DataGridRowHeader style -->
        <Style x:Key="RowHeaderStyle" TargetType="DataGridRowHeader">
            <Setter Property="Height" Value="Auto" />
            <Setter Property="Width" Value="16" />
            <Setter Property="BorderBrush" Value="Black" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Background" Value="{DynamicResource ResourceKey=BoneGradient}" />            
            <Style.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="5"/>
                </Style>
                <LinearGradientBrush x:Key="BoneGradient" x:Name="BoneGradient" StartPoint="1,1" EndPoint="0,0" >
                    <GradientStop Color="Tan" Offset="0"/>
                    <GradientStop Color="Ivory" Offset="1"/>
                </LinearGradientBrush>
            </Style.Resources>
        </Style>
        
        <!--DataGridCells-->
        <Style  TargetType="{x:Type DataGridCell}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=Content.Text, RelativeSource={RelativeSource Self}}"  Value="" >
                    <Setter Property="Background" Value="DarkRed"/>
                </DataTrigger>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="FontWeight" Value="Bold"/>
                </Trigger>
            </Style.Triggers>
            <Style.Resources>
                <LinearGradientBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" EndPoint="0,1" StartPoint="0,0">
                    <GradientStop Color="PaleVioletRed" Offset="0"/>
                    <GradientStop Color="MediumVioletRed" Offset="1"/>
                </LinearGradientBrush>
            </Style.Resources>
        </Style>
        
        <!-- TreeView Style -->        
        <Style TargetType="{x:Type TreeView}">
            <Setter Property="Background" Value="#500"/>
            <Setter Property="BorderBrush" Value="SlateGray"/>
        </Style>
        <!--TreeViewItemStyle-->
        <Style TargetType="{x:Type TreeViewItem}">
            <Setter Property="Background" Value="#500"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="24"/>
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="TextBlock.Margin" Value="2" />
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="BorderBrush" Value="Orange"/>
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="Foreground" Value="Orange"/>
                </Trigger>
            </Style.Triggers>
            <Style.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="2"/>
                </Style>
                <LinearGradientBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" EndPoint="0,1" StartPoint="0,0">
                    <GradientStop Color="PaleVioletRed" Offset="0"/>
                    <GradientStop Color="MediumVioletRed" Offset="1"/>
                </LinearGradientBrush>
            </Style.Resources>
        </Style>

        <LinearGradientBrush x:Key="RedGradient" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="DarkRed" Offset="0"/>
            <GradientStop Color="#500" Offset="1"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="ReVGradient" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#500" Offset="0"/>
            <GradientStop Color="DarkRed" Offset="1"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="PinkGradient" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="PaleVioletRed" Offset="0"/>
            <GradientStop Color="MediumVioletRed" Offset="1"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="OrangeGradient" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="DarkOrange" Offset="0"/>
            <GradientStop Color="Orange" Offset="1"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="MedRedGradiant" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="IndianRed" Offset="0"/>
            <GradientStop Color="IndianRed" Offset="1"/>
        </LinearGradientBrush>
    </Page.Resources>
</Page>