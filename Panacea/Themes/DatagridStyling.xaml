<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- *********************************  RESOURCES  ********************************* -->
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Styles.WPF.xaml" />
        <ResourceDictionary Source="../Resources/Fonts.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <!-- ********************************* COLOURS & BRUSHES ********************************* -->
    <LinearGradientBrush x:Key="ColumnHeaderBorderBrush" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Offset="0" Color="{DynamicResource Color025}" />
        <GradientStop Offset="1" Color="{DynamicResource Color024}" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ColumnHeaderBackgroundBrush" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Offset="0" Color="{DynamicResource Color007}" />
        <GradientStop Offset="1" Color="{DynamicResource Color009}" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="RowHeaderBackground" StartPoint="0,.5" EndPoint="1,.5">
        <GradientStop Offset=".3" Color="{DynamicResource Color009}" />
        <GradientStop Offset="1" Color="{DynamicResource Color023}" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="RowHeaderBorder" Color="{DynamicResource Color009}"/>
    <SolidColorBrush x:Key="SelectedRowBorder" Color="{DynamicResource Color023}"/>
    <RadialGradientBrush x:Key="SelectAllBackground" Center="1,1" RadiusX=".68" RadiusY=".8" GradientOrigin="1,1">
        <GradientStop Offset="0.0" Color="{DynamicResource Color023}"/>
        <GradientStop Offset="1" Color="{DynamicResource Color009}"/>
    </RadialGradientBrush>

    <!-- ***************************  DataGrid Column Header Style  **************************** -->
    <Style x:Key="DataGridColumnHeaderStyle" TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                    <Grid>
                        <Border x:Name="columnHeaderBorder"
                                BorderThickness=".7"
                                Padding="3,0,3,0"
                                BorderBrush="{DynamicResource ColumnHeaderBorderBrush}"
                                Background="{DynamicResource ColumnHeaderBackgroundBrush}">

                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"			     
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                              TextBlock.Foreground="{DynamicResource Brush00}"
                                              Margin="2"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ********************************* DataGrid Row Style ********************************** -->
    <Style TargetType="{x:Type DataGridRow}" x:Key="DataGridRowStyle">
        <!-- Place holder. -->
    </Style>

    <!-- ********************************* DataGrid Row Style ********************************** -->
    <Style TargetType="{x:Type DataGridRowHeader}" x:Key="DataGridRowHeaderStyle">
        <Setter Property="Background" Value="{DynamicResource RowHeaderBackground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource RowHeaderBorder}"/>
        <Setter Property="BorderThickness" Value=".7"/>
    </Style>

    <!-- ********************************* DataGrid Cell Style ********************************* -->
    <Style TargetType="{x:Type DataGridCell}" x:Key="DataGridCellStyle">
        <Setter Property="TextBlock.Foreground" Value="{DynamicResource Brush00}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid Background="{TemplateBinding Background}">
                            <ContentPresenter VerticalAlignment="Center" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource Brush01}"/>
                <Setter Property="Foreground" Value="{DynamicResource DarkForegroundBrush}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource SelectedRowBorder}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- ********************************* DataGrid Style ********************************* -->
    <Style x:Key="{ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle x:Name="Border" Fill="{DynamicResource SelectAllBackground}" SnapsToDevicePixels="True"/>
                        <Polygon x:Name="Arrow" Fill="Black" HorizontalAlignment="Right" Margin="8,8,3,3" Opacity="0.15" Points="0,10 10,10 10,0" Stretch="Uniform" VerticalAlignment="Bottom"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Stroke" TargetName="Border" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="Border" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Visibility" TargetName="Arrow" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DataGridStyle" TargetType="{x:Type DataGrid}">
        <Setter Property="Background" Value="{DynamicResource Brush05}"/>
        <Setter Property="Foreground" Value="{DynamicResource Brush01}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="ColumnHeaderStyle" Value="{DynamicResource DataGridColumnHeaderStyle}"/>
        <Setter Property="CellStyle" Value="{DynamicResource DataGridCellStyle}"/>
        <Setter Property="RowStyle" Value="{DynamicResource DataGridRowStyle}"/>
        <Setter Property="RowHeaderStyle" Value="{DynamicResource DataGridRowHeaderStyle}"/>
        <Setter Property="FontFamily" Value="{StaticResource DIN}"/>
        <Setter Property="AlternationCount" Value="2"/>
        <Setter Property="RowBackground" Value="{DynamicResource Brush05}"/>
        <Setter Property="AlternatingRowBackground" Value="{DynamicResource Brush04}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGrid}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="DG_ScrollViewer" Focusable="false">
                            <ScrollViewer.Template>
                                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                        <Button Command="{x:Static DataGrid.SelectAllCommand}" Focusable="false" Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}}" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.All}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                        <DataGridColumnHeadersPresenter Grid.Row="0" x:Name="PART_ColumnHeadersPresenter" Grid.Column="1" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                        <ScrollContentPresenter Grid.Column="0" x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" Grid.ColumnSpan="2" Grid.Row="1"/>
                                        <ScrollBar x:Name="PART_VerticalScrollBar" Grid.Column="2" Maximum="{TemplateBinding ScrollableHeight}" Orientation="Vertical" Grid.Row="1" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                                        <Grid Grid.Column="1" Grid.Row="2">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <ScrollBar x:Name="PART_HorizontalScrollBar" Grid.Column="1" Maximum="{TemplateBinding ScrollableWidth}" Orientation="Horizontal" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                                        </Grid>
                                    </Grid>
                                </ControlTemplate>
                            </ScrollViewer.Template>
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true"/>
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <!-- ********************************* IMPLICIT STYLING ********************************* -->
    <Style BasedOn="{StaticResource DataGridStyle}" TargetType="{x:Type DataGrid}"/>

</ResourceDictionary>