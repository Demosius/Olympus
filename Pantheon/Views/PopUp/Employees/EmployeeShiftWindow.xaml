<Window x:Class="Pantheon.Views.PopUp.Employees.EmployeeShiftWindow"
        x:Name="ShiftWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:converter="clr-namespace:Pantheon.ViewModels.Converter"
        xmlns:vm="clr-namespace:Pantheon.ViewModels.PopUp.Employees"
        xmlns:controls="clr-namespace:Pantheon.Views.Controls.Shifts"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance {x:Type vm:EmployeeShiftVM}, IsDesignTimeCreatable=False}"
        Title="Shift Management" 
        SizeToContent="Height"
        Width="415"
        WindowStartupLocation="CenterOwner"
        Background="{StaticResource TooltipBackgroundBrush}"
        Foreground="{StaticResource LightForegroundBrush}"
        FocusManager.FocusedElement="{Binding ElementName=IDBox}"
        ResizeMode="NoResize">

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Morpheus;component/Themes/Dark/Master/MSControls.Core.Implicit.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>

    <StackPanel Orientation="Vertical"
                Margin="15">
        <StackPanel.Resources>
            <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource TextBoxStyle}">
                <Setter Property="Margin" Value="5"/>
            </Style>
            <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource ComboBoxStyle}">
                <Setter Property="Margin" Value="5"/>
                <Setter Property="IsEditable" Value="True"/>
                <Setter Property="MinWidth" Value="150"/>
                <Setter Property="MaxWidth" Value="250"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
            </Style>
            <Style TargetType="{x:Type Label}" BasedOn="{StaticResource LabelStyle}">
                <Setter Property="VerticalAlignment" Value="Bottom"/>
                <Setter Property="VerticalContentAlignment" Value="Bottom"/>
                <Setter Property="Margin" Value="0,10,0,0"/>
            </Style>
            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonStyle}">
                <Setter Property="Margin" Value="5"/>
                <Setter Property="HorizontalAlignment" Value="Right"/>
            </Style>
            <Style TargetType="{x:Type DatePicker}">
                <Setter Property="Margin" Value="5" />
            </Style>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
            <converter:EditBoolToLabelConverter x:Key="EditBoolConverter"/>
        </StackPanel.Resources>

        <!--Shift Eligibility -->
        <Label Content="Shift Eligibility:"
               FontSize="16"
               Margin="0"/>
        <ItemsControl ItemsSource="{Binding EmpShifts, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <WrapPanel Orientation="Horizontal"/>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Border BorderBrush="{StaticResource ForegroundBrush}"
                            BorderThickness="1">
                        <Grid >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <CheckBox Grid.Column="0"
                                      IsChecked="{Binding Active, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                      HorizontalAlignment="Center"/>
                            <Label Grid.Column="1"
                                   Content="{Binding Shift.Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, FallbackValue=''}"
                                   HorizontalAlignment="Left"
                                   Margin="0,0,15,0"
                                   FontSize="16"
                                   FontWeight="Bold"/>
                        </Grid>
                    </Border>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
        <Separator/>
        <!-- Default Shift -->
        <StackPanel Orientation="Horizontal">
            <Label Content="Default Shift: "
                   VerticalAlignment="Center"
                   Margin="0"/>
            <ComboBox ItemsSource="{Binding ShiftNames , Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                      SelectedValue="{Binding SelectedShiftName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
        </StackPanel>
        <Separator/>

        <!-- Shift Rules -->
        <StackPanel Orientation="Vertical">
            <StackPanel.Resources>
                <Style TargetType="{x:Type Label}" BasedOn="{StaticResource LabelStyle}">
                    <Setter Property="VerticalAlignment" Value="Center"/>
                    <Setter Property="HorizontalAlignment" Value="Right"/>
                    <Setter Property="FontWeight" Value="Bold"/>
                </Style>
                <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource ComboBoxStyle}">
                    <Setter Property="HorizontalAlignment" Value="Left"/>
                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                    <Setter Property="Margin" Value="5,2"/>
                    <Setter Property="Width" Value="130"/>
                </Style>
                <Style TargetType="{x:Type DatePicker}">
                    <Setter Property="Margin" Value="5,2"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                </Style>
                <Style TargetType="{x:Type DatePickerTextBox}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <TextBox x:Name="PART_TextBox" 
                                         Text="{Binding Path=SelectedDate, RelativeSource={RelativeSource AncestorType={x:Type DatePicker}}, StringFormat=dd/MM/yyyy}" 
                                         Margin="0"
                                         FontSize="14"
                                         MinWidth="80"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
                <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource TextBoxStyle}">
                    <EventSetter Event="GotKeyboardFocus" Handler="TextBox_GotKeyboardFocus"/>
                    <EventSetter Event="LostMouseCapture" Handler="TextBox_LostMouseCapture"/>
                    <EventSetter Event="LostKeyboardFocus" Handler="TextBox_LostKeyboardFocus"/>
                    <Setter Property="Margin" Value="5,2"></Setter>
                </Style>
            </StackPanel.Resources>

            <!-- New rule options. -->
            <StackPanel Orientation="Horizontal" Margin="0,0,0,10">
                <ToggleButton Content="Single Use"
                              IsChecked="{Binding SingleCheck, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                <ToggleButton Content="Recurring"
                              IsChecked="{Binding RecurringCheck, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                <ToggleButton Content="Set Roster"
                              IsChecked="{Binding RosterCheck, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            </StackPanel>

            <!-- Single Rule Creation -->
            <Grid Visibility="{Binding SingleCheck, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}">
                <controls:SingleRuleView DataContext="{Binding SingleRule}"/>
            </Grid>

            <!-- Recurring Rule Creation -->
            <Grid Visibility="{Binding RecurringCheck, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}">
                <controls:RecurringRuleView DataContext="{Binding RecurringRule}"/>
            </Grid>

            <!-- Roster Rule Creation -->
            <Grid Visibility="{Binding RosterCheck, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}">
                <controls:RosterRuleView DataContext="{Binding RosterRule}"/>
            </Grid>

            <StackPanel Orientation="Horizontal"
                        HorizontalAlignment="Right">
                <Button Content="Cancel"
                        Command="{Binding CancelRuleEditCommand}"
                        Visibility="{Binding InEdit, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                <Button Content="{Binding InEdit, Mode=OneWay, Converter={StaticResource EditBoolConverter}}"
                        Command="{Binding AddRuleCommand}"/>
            </StackPanel>

            <!-- Current rules -->
            <!-- Use item view of some sort. -->
            <Expander IsExpanded="False" 
                      BorderThickness=".5" 
                      BorderBrush="{StaticResource Brush01}">
                <StackPanel Orientation="Vertical"
                            CanHorizontallyScroll="False">
                    <ListView ItemsSource="{Binding SingleRules, Mode=OneWay}"
                              SelectedValue="{Binding SelectedRule, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                        <ListView.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel />
                            </ItemsPanelTemplate>
                        </ListView.ItemsPanel>
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <Border BorderBrush="Magenta"
                                        Background="#303"
                                        BorderThickness="1"
                                        Margin="2"
                                        Padding="5,2"
                                        CornerRadius="10">
                                    <TextBlock Text="{Binding}"
                                               ToolTip="{Binding Summary}"/>
                                </Border>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                    <ListView ItemsSource="{Binding RecurringRules, Mode=OneWay}"
                              SelectedValue="{Binding SelectedRule, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                        <ListView.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel />
                            </ItemsPanelTemplate>
                        </ListView.ItemsPanel>
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <Border BorderBrush="Yellow"
                                        Background="#330"
                                        BorderThickness="1"
                                        Margin="2"
                                        Padding="5,2"
                                        CornerRadius="10">
                                    <TextBlock Text="{Binding}"
                                               ToolTip="{Binding Summary}"/>
                                </Border>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                    <ListView ItemsSource="{Binding RosterRules, Mode=OneWay}"
                              SelectedValue="{Binding SelectedRule, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                              ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                        <ListView.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel />
                            </ItemsPanelTemplate>
                        </ListView.ItemsPanel>
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <Border BorderBrush="Cyan"
                                        Background="#033"
                                        BorderThickness="1"
                                        Margin="2"
                                        Padding="5,2"
                                        CornerRadius="10">
                                    <TextBlock Text="{Binding}"
                                               ToolTip="{Binding Summary}"/>
                                </Border>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                    <StackPanel Orientation="Horizontal"
                                HorizontalAlignment="Right">
                        <Button Content="Edit"
                                Width="80"
                                Command="{Binding EditShiftRuleCommand}"/>
                        <Button Content="Delete"
                                Width="80"
                                Command="{Binding DeleteShiftRuleCommand}"/>
                    </StackPanel>
                </StackPanel>
            </Expander>
        </StackPanel>

        <!-- Buttons -->
        <StackPanel Orientation="Horizontal"
                    HorizontalAlignment="Right"
                    Margin="0,10,0,0">
            <Button Content="Cancel"
                    IsCancel="True"
                    Width="75"/>
            <Button Content="Confirm"
                    Command="{Binding ConfirmShiftAdjustmentsCommand}"
                    CommandParameter="{Binding ElementName=ShiftWindow}"
                    Width="75"/>
        </StackPanel>
    </StackPanel>
</Window>
