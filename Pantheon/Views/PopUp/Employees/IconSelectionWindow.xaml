<Window x:Class="Pantheon.Views.PopUp.Employees.IconSelectionWindow"
        x:Name="IconWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:vm="clr-namespace:Pantheon.ViewModels.PopUp.Employees"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance {x:Type vm:IconSelectionVM}, IsDesignTimeCreatable=False}"
        Title="Select Employee Icon"
        WindowStartupLocation="CenterOwner"
        Background="{StaticResource TooltipBackgroundBrush}"
        Foreground="{StaticResource LightForegroundBrush}"
        FocusManager.FocusedElement="{Binding ElementName=IDBox}">

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Morpheus;component/Themes/Dark/Master/MSControls.Core.Implicit.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>

    <DockPanel Margin="10">

        <DockPanel.Resources>
            <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource TextBoxStyle}">
                <Setter Property="Margin" Value="5"/>
            </Style>
            <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource ComboBoxStyle}">
                <Setter Property="Margin" Value="5"/>
                <Setter Property="IsEditable" Value="True"/>
                <Setter Property="MinWidth" Value="250"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
            </Style>
            <Style TargetType="{x:Type Label}" BasedOn="{StaticResource LabelStyle}">
                <Setter Property="VerticalAlignment" Value="Bottom"/>
                <Setter Property="VerticalContentAlignment" Value="Bottom"/>
                <Setter Property="Margin" Value="0"/>
            </Style>
            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonStyle}">
                <Setter Property="Margin" Value="5,5,5,5"/>
                <Setter Property="MinWidth" Value="75"/>
                <Setter Property="HorizontalAlignment" Value="Right"/>
            </Style>
        </DockPanel.Resources>

        <!-- Icon Label -->
        <Label Content="Icons" DockPanel.Dock="Top"
               FontSize="14"
               FontWeight="Bold"/>

        <StackPanel DockPanel.Dock="Bottom"
            Orientation="Vertical">
            <!-- New Icon Button -->
            <Button Content="Add New Icon"
                Command="{Binding FindNewImageCommand}"/>

            <!-- Icon Detail Display -->
            <Border  BorderBrush="{StaticResource ForegroundBrush}"
                     BorderThickness="1"
                     Margin="5">
                <Grid Width="{Binding ElementName=ListView, Path=Width}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Border Grid.Column="0" Grid.Row="0" Grid.RowSpan="3"
                            BorderBrush="{StaticResource ButtonBorderBrush}"
                            BorderThickness="1"
                            Margin="2"
                            Width="150"
                            Height="150">
                        <Image Source="{Binding SelectedIcon.FullPath, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, FallbackValue=''}"/>
                    </Border>
                    <TextBox Grid.Column="1" Grid.Row="0"
                             Text="{Binding IconName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, FallbackValue=''}" Margin="5,5,5,5"/>
                    <TextBlock Grid.Column="1" Grid.Row="1" 
                               Text="{Binding SelectedIcon.FullPath, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, FallbackValue=''}"
                               VerticalAlignment="Top"
                               TextWrapping="Wrap"
                               Margin="5,0"
                               Foreground="{StaticResource Brush03}"
                               FontSize="10"
                               MinWidth="100"/>
                    <Button Grid.Column="1" Grid.Row="2"
                            Content="Save Icon Changes"
                            Command="{Binding SaveImageChangesCommand}"
                            HorizontalAlignment="Right"/>

                </Grid>
            </Border>

            <!-- Cancel/Confirm -->
            <StackPanel Orientation="Horizontal"
                        HorizontalAlignment="Right"
                        Margin="0,10,0,0">
                <Button Content="Cancel"
                        IsCancel="True"/>
                <Button Content="Confirm"
                        Command="{Binding ConfirmImageSelectionCommand}"
                        CommandParameter="{Binding ElementName=IconWindow}"
                        IsDefault="True"/>
            </StackPanel>

        </StackPanel>

        <!-- Icon Scroll -->
        <Grid>
            <!--<ScrollViewer x:Name="ScrollViewer" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">-->
            <ListView x:Name="ListView" ItemsSource="{Binding Icons, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          SelectedValue="{Binding SelectedIcon, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" d:ItemsSource="{d:SampleData ItemCount=5}">
                <ListView.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel Orientation="Horizontal"
                                       Width="{Binding ElementName=ScrollViewer, Path=ViewportWidth}"
                                       ScrollViewer.VerticalScrollBarVisibility="Auto"/>
                    </ItemsPanelTemplate>
                </ListView.ItemsPanel>
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <Image Source="{Binding FullPath, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                               ToolTip="{Binding Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                               Width="80"
                               Height="80"
                               Margin="2"/>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
            <!--</ScrollViewer>-->
        </Grid>
    </DockPanel>
</Window>
