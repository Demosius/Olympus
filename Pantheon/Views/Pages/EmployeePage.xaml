<Page x:Class="Pantheon.Views.Pages.EmployeePage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:sys="clr-namespace:System;assembly=System.Runtime"
      xmlns:model="clr-namespace:Uranus.Staff.Models;assembly=Uranus"
      xmlns:converter="clr-namespace:Pantheon.ViewModels.Converter"
      xmlns:pages="clr-namespace:Pantheon.ViewModels.Pages"
      mc:Ignorable="d" 
      d:DataContext="{d:DesignInstance {x:Type pages:EmployeePageVM}, IsDesignTimeCreatable=False}"
      d:DesignHeight="1080" d:DesignWidth="1200"
      Title="EmployeePage">

    <Page.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <!-- Dark Theme -->
                <ResourceDictionary Source="/Morpheus;component/Themes/Dark/Master/MSControls.Core.Implicit.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Page.Resources>

    <DockPanel>
        <DockPanel.Resources>
            <converter:EmploymentToStringConverter x:Key="EmploymentTypeConverter"/>
            <ObjectDataProvider x:Key="EmploymentTypes"
                                MethodName="GetValues" 
                                ObjectType="{x:Type sys:Enum}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="model:EEmploymentType"/>
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>
            <ObjectDataProvider x:Key="SortMethods"
                                MethodName="GetValues" 
                                ObjectType="{x:Type sys:Enum}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="pages:ESortMethod"/>
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>
            <BooleanToVisibilityConverter x:Key="VisibilityConverter"/>
            <converter:UserToColourConverter x:Key="UserToColourConverter"/>
        </DockPanel.Resources>

        <ToolBarTray DockPanel.Dock="Top">
            <!-- Search / Filter -->
            <ToolBar>
                <TextBox Text="{Binding EmployeeSearchString, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                         ToolTip="Employee Search Text"
                         MinWidth="100"
                         Margin="2,0"
                         Style="{StaticResource TextBoxStyle}"/>
                <ComboBox ItemsSource="{Binding Source={StaticResource EmploymentTypes}}"
                          SelectedValue="{Binding SelectedEmploymentType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          ToolTip="Filter Employment Type"
                          IsEditable="True"
                          MinWidth="100"
                          Margin="2,0"
                          Style="{StaticResource ComboBoxStyle}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Converter={StaticResource EmploymentTypeConverter}}"/>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
                <ComboBox ItemsSource="{Binding Roles, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          SelectedValue="{Binding SelectedRole, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          ToolTip="Filter Role (Job Description)"
                          IsEditable="True"
                          MinWidth="100"
                          Margin="2,0"
                          Style="{StaticResource ComboBoxStyle}"/>
                <ComboBox ItemsSource="{Binding Departments, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          SelectedValue="{Binding SelectedDepartment, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          ToolTip="Filter Department"
                          IsEditable="True"
                          MinWidth="100"
                          Margin="2,0"
                          Style="{StaticResource ComboBoxStyle}"/>
                <Button Content="Clear"
                        Command="{Binding ClearFiltersCommand}"
                        ToolTip="Clear Filters"
                        Margin="2,0"
                        Style="{StaticResource ButtonStyle}"/>
            </ToolBar>
            <!-- Sorting -->
            <ToolBar>
                <ComboBox ItemsSource="{Binding Source={StaticResource SortMethods}}"
                          SelectedValue="{Binding SelectedESortMethod, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          ToolTip="Sort Method"
                          IsEditable="True"
                          MinWidth="100"
                          Margin="2,0"
                          Style="{StaticResource ComboBoxStyle}" />
            </ToolBar>
            <!-- Action Buttons -->
            <ToolBar>

                <ToggleButton x:Name="TogglePopupButton"
                              Style="{StaticResource ToggleButtonStyle}"
                              HorizontalAlignment="Left"
                              Padding="5,0" Margin="5,5"
                              Content="☰"/>
                <Popup IsOpen="{Binding IsChecked, ElementName=TogglePopupButton}">
                    <Border BorderThickness="1" BorderBrush="{StaticResource CheckBoxBorderBrush}">
                        <StackPanel Orientation="Vertical">
                            <Button Content="Fill FT Rosters"
                                    ToolTip="Set any full time employees without existing roster rules to use a standard M-F roster."
                                    Command="{Binding FillFullTimeRostersCommand}"/>
                        </StackPanel>
                    </Border>
                </Popup>

            </ToolBar>
        </ToolBarTray>

        <!-- List of Employees -->
        <DockPanel DockPanel.Dock="Left">

            <Grid DockPanel.Dock="Bottom">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Button Grid.Column="0" Content="New Employee"
                        Command="{Binding CreateNewEmployeeCommand}"/>
                <Button Grid.Column="1" Content="Delete Employee"
                        Command="{Binding DeleteEmployeeCommand}"/>
                <Button Grid.Column="2" Content="Activate User"
                        Command="{Binding ActivateUserCommand}"/>
            </Grid>

            <ListView d:ItemsSource="{d:SampleData ItemCount=5}" 
                      ItemsSource="{Binding Employees, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                      SelectedValue="{Binding SelectedEmployeeVM, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <Image Source="{Binding Icon.FullPath, FallbackValue=''}"
                                   MaxWidth="50"
                                   MaxHeight="50"
                                   Margin="0,0,5,0"/>
                            <StackPanel Orientation="Vertical">
                                <StackPanel Orientation="Horizontal">
                                    <Label Content="{Binding FullName, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                           FontSize="14"
                                           FontWeight="Bold"
                                           Foreground="{StaticResource LightForegroundBrush}"/>
                                    <Label Content=" - "
                                           FontSize="14"
                                           FontWeight="Bold"
                                           Foreground="{StaticResource LightForegroundBrush}"/>
                                    <Label Content="{Binding ID, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                           FontSize="14"
                                           FontStyle="Italic"
                                           Foreground="{StaticResource LightForegroundBrush}"/>
                                    <Label Content=" U" 
                                           Foreground="DarkOrange"
                                           FontSize="14"
                                           FontWeight="Black"
                                           Visibility="{Binding IsUser, Mode=OneWay, Converter={StaticResource VisibilityConverter}}"/>
                                </StackPanel>
                                <WrapPanel Orientation="Horizontal">
                                    <TextBlock Text="Employment: "/>
                                    <TextBlock Text="{Binding EmploymentType, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource EmploymentTypeConverter}}"/>
                                    <Separator/>
                                    <TextBlock Text="Role: "/>
                                    <TextBlock Text="{Binding Role, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>
                                    <Separator/>
                                    <TextBlock Text="Department: "/>
                                    <TextBlock Text="{Binding Department, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />

                                </WrapPanel>
                            </StackPanel>
                        </StackPanel>
                    </DataTemplate>
                </ListView.ItemTemplate>
                <ListView.Resources>
                    <Style TargetType="Separator" BasedOn="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}">
                        <Setter Property="Margin" Value="5,0"/>
                    </Style>
                </ListView.Resources>
            </ListView>
        </DockPanel>


        <!-- Employee Editing Panel -->
        <DockPanel DockPanel.Dock="Left">

            <Button DockPanel.Dock="Bottom" 
                    Content="Save Changes"
                    Command="{Binding SaveEmployeeCommand}"/>

            <ScrollViewer DockPanel.Dock="Bottom"
                          DataContext="{Binding SelectedEmployeeVM, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                <Grid Margin="5">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <!-- ID -->
                    <StackPanel Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="3"
                        HorizontalAlignment="Center"
                        Orientation="Horizontal">
                        <Label  Content="ID - "/>
                        <Label  Content="{Binding ID, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, FallbackValue=''}"/>
                    </StackPanel>
                    <!-- Icon -->
                    <Label Grid.Column="0" Grid.Row="1" 
                           Content="Icon: "
                           VerticalAlignment="Top"/>
                    <StackPanel Grid.Column="1" Grid.Row="1" Orientation="Vertical">
                        <Border Height="135"
                                Width="135"
                                BorderBrush="{Binding IsUser, Converter={StaticResource UserToColourConverter}, Mode=OneWay, FallbackValue=''}"
                                BorderThickness="1">
                            <Image Source="{Binding Icon.FullPath, Mode=TwoWay, FallbackValue=''}"/>
                        </Border>
                        <Button Content="Change"
                                Command="{Binding LaunchIconiferCommand}"
                                Width="135"
                                Margin="5"/>
                    </StackPanel>
                    <!-- First Name -->
                    <Label Grid.Column="0" Grid.Row="2" 
                           Content="First Name: "/>
                    <TextBox Grid.Column="1" Grid.Row="2"
                             Text="{Binding FirstName, Mode=TwoWay, FallbackValue=''}"/>
                    <!-- Last Name -->
                    <Label Grid.Column="0" Grid.Row="3" 
                           Content="Last Name: "/>
                    <TextBox Grid.Column="1" Grid.Row="3"
                             Text="{Binding LastName, FallbackValue=''}"/>
                    <!-- Display Name -->
                    <Label Grid.Column="0" Grid.Row="4" 
                           Content="Display Name: "/>
                    <TextBox Grid.Column="1" Grid.Row="4"
                             Text="{Binding DisplayName, FallbackValue=''}"/>
                    <!-- PC ID -->
                    <Label Grid.Column="0" Grid.Row="5"
                           Content="PC ID: "/>
                    <TextBox Grid.Column="1" Grid.Row="5"
                             Text="{Binding PC_ID, FallbackValue=''}"/>
                    <!-- RF ID -->
                    <Label Grid.Column="0" Grid.Row="6"
                           Content="RF ID: "/>
                    <TextBox Grid.Column="1" Grid.Row="6"
                             Text="{Binding RF_ID, FallbackValue=''}"/>
                    <!-- Location -->
                    <Label Grid.Column="0" Grid.Row="7"
                           Content="Location: "/>
                    <StackPanel Grid.Column="1" Grid.Row="7" 
                                Orientation="Horizontal">
                        <ComboBox ItemsSource="{Binding Locations, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                  SelectedValue="{Binding Location, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, FallbackValue=''}"
                                  HorizontalContentAlignment="Center"/>
                        <Button Content="Add"
                                Command="{Binding AddLocationCommand}"/>
                    </StackPanel>
                    <!-- Department -->
                    <Label Grid.Column="0" Grid.Row="8"
                           Content="Department: "/>

                    <StackPanel Grid.Column="1" Grid.Row="8" 
                                Orientation="Horizontal">
                        <ComboBox ItemsSource="{Binding FullDepartments, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                              SelectedValue="{Binding SelectedEmployeeVM.Department, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, FallbackValue=''}"
                              HorizontalContentAlignment="Center"/>
                        <Button Content="Add"
                            Command="{Binding AddDepartmentCommand}"/>
                    </StackPanel>
                    <!-- Role -->
                    <Label Grid.Column="0" Grid.Row="9"
                           Content="Role: "/>
                    <StackPanel Grid.Column="1" Grid.Row="9" 
                                Orientation="Horizontal">
                        <ComboBox ItemsSource="{Binding RoleNames, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                  SelectedValue="{Binding RoleName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, FallbackValue=''}"
                                  HorizontalContentAlignment="Center"/>
                        <Button Content="Add"
                            Command="{Binding AddRoleCommand}"/>
                    </StackPanel>
                    <!-- Reports To -->
                    <Label Grid.Column="0" Grid.Row="10"
                           Content="Reports To: "/>
                    <StackPanel Grid.Column="1" Grid.Row="10"
                                Orientation="Horizontal">
                        <ComboBox ItemsSource="{Binding Managers, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                  SelectedValue="{Binding ReportsTo, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, FallbackValue=''}"
                                  HorizontalContentAlignment="Center"/>
                        <StackPanel Orientation="Vertical">
                            <Label Content="Use All" FontSize="8" FontWeight="Light" Margin="0" Padding="0"/>
                            <CheckBox IsChecked="{Binding UseAllAsManagers, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                      Margin="0" Padding="0"/>
                        </StackPanel>
                    </StackPanel>
                    <!-- Clan -->
                    <Label Grid.Column="0" Grid.Row="11"
                           Content="Clan: "/>
                    <StackPanel Grid.Column="1" Grid.Row="11" 
                                Orientation="Horizontal">
                        <ComboBox ItemsSource="{Binding Clans, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                              SelectedValue="{Binding SelectedEmployeeVM.Clan, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, FallbackValue=''}"
                              HorizontalContentAlignment="Center"/>
                        <Button Content="Add"
                            Command="{Binding AddClanCommand}"/>
                    </StackPanel>
                    <!-- Pay Point -->
                    <Label Grid.Column="0" Grid.Row="12"
                           Content="Pay Point: "/>
                    <StackPanel Grid.Column="1" Grid.Row="12" 
                                Orientation="Horizontal">
                        <ComboBox ItemsSource="{Binding PayPoints, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                              SelectedValue="{Binding SelectedEmployeeVM.PayPoint, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, FallbackValue=''}"
                              HorizontalContentAlignment="Center"/>
                        <Button Content="Add"
                            Command="{Binding AddPayPointCommand}"/>
                    </StackPanel>
                    <!-- Employment Type -->
                    <Label Grid.Column="0" Grid.Row="13"
                           Content="Employment Type: "/>
                    <ComboBox Grid.Column="1" Grid.Row="13"
                              ItemsSource="{Binding EmploymentTypes, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                              SelectedValue="{Binding SelectedEmployeeVM.EmploymentType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, FallbackValue=''}"/>
                    <!-- Phone Number -->
                    <Label Grid.Column="0" Grid.Row="14"
                           Content="Phone: "
                           Visibility="{Binding SensitiveVisibility, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource VisibilityConverter}}"/>
                    <TextBox Grid.Column="1" Grid.Row="14"
                             Text="{Binding SelectedEmployeeVM.PhoneNumber, FallbackValue=''}"
                             Visibility="{Binding SensitiveVisibility, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource VisibilityConverter}}"/>
                    <!-- Email -->
                    <Label Grid.Column="0" Grid.Row="15"
                           Content="Email: "
                           Visibility="{Binding SensitiveVisibility, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource VisibilityConverter}}"/>
                    <TextBox Grid.Column="1" Grid.Row="15"
                             Text="{Binding SelectedEmployeeVM.Email, FallbackValue=''}"
                             Visibility="{Binding SensitiveVisibility, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource VisibilityConverter}}"/>
                    <!-- Address -->
                    <Label Grid.Column="0" Grid.Row="16"
                           Content="Address: "
                           Visibility="{Binding SensitiveVisibility, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource VisibilityConverter}}"/>
                    <TextBox Grid.Column="1" Grid.Row="16"
                             Text="{Binding SelectedEmployeeVM.Address, FallbackValue=''}"
                             Visibility="{Binding SensitiveVisibility, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource VisibilityConverter}}"/>
                    <!-- Pay Rate -->
                    <Label Grid.Column="0" Grid.Row="17"
                           Content="Pay Rate: "
                           Visibility="{Binding VerySensitiveVisibility, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource VisibilityConverter}}"/>
                    <TextBox Grid.Column="1" Grid.Row="17"
                             Text="{Binding SelectedEmployeeVM.PayRate, FallbackValue=''}"
                             Visibility="{Binding VerySensitiveVisibility, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource VisibilityConverter}}"/>

                    <!-- Shift Rules -->
                    <Button Grid.Column="0" Grid.Row="18" Grid.ColumnSpan="2"
                            Content="Manage Shift Rules"
                            Command="{Binding LaunchEmployeeShiftWindowCommand}"/>

                    <!-- Licensing -->
                    <Button Grid.Column="0" Grid.Row="19" Grid.ColumnSpan="2"
                            Content="Manage Licenses"
                            IsEnabled="False"
                            ToolTip="Not Yet Implemented"/>

                    <!-- Vehicles -->
                    <Button Grid.Column="0" Grid.Row="20" Grid.ColumnSpan="2"
                            Content="Manage Vehicles"
                            IsEnabled="False"
                            ToolTip="Not Yet Implemented"/>

                    <!-- Lockers -->
                    <Button Grid.Column="0" Grid.Row="21" Grid.ColumnSpan="2"
                            Content="Manage Locker"
                            IsEnabled="False"
                            ToolTip="Not Yet Implemented"/>

                    <Grid.Resources>
                        <Style TargetType="{x:Type Label}" BasedOn="{StaticResource LabelStyle}">
                            <Setter Property="FontWeight" Value="Bold"/>
                            <Setter Property="HorizontalAlignment" Value="Right"/>
                            <Setter Property="VerticalAlignment" Value="Center"/>
                        </Style>
                        <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource TextBoxStyle}">
                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                            <Setter Property="MinWidth" Value="200"/>
                            <Setter Property="Margin" Value="5"/>
                        </Style>
                        <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource ComboBoxStyle}">
                            <Setter Property="Margin" Value="5"/>
                            <Setter Property="MinWidth" Value="200"/>
                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                        </Style>
                        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonStyle}">
                            <Setter Property="Margin" Value="5"/>
                        </Style>
                    </Grid.Resources>
                </Grid>
            </ScrollViewer>

        </DockPanel>

        <!-- Avatar -->
        <DockPanel>
            <Button DockPanel.Dock="Bottom"
                    Content="Change Avatar"
                    Command="{Binding LaunchAvatarSelectorCommand}"/>
            <Image Source="{Binding SelectedEmployeeVM.Avatar.FullPath, FallbackValue=''}"/>
        </DockPanel>

    </DockPanel>
</Page>
