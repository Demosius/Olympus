<UserControl x:Class="Pantheon.Views.Controls.Rosters.DepartmentRosterView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:vm="clr-namespace:Pantheon.ViewModels.Controls.Rosters"
             xmlns:rosters="clr-namespace:Pantheon.Views.Controls.Rosters"
             xmlns:converter="clr-namespace:Pantheon.ViewModels.Converter"
             mc:Ignorable="d" 
             d:DataContext="{d:DesignInstance {x:Type vm:DepartmentRosterVM}, IsDesignTimeCreatable=False}">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary>

                    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
                    <converter:BoolToColourConverter x:Key="BoolToColourConverter"/>

                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>

    <DockPanel Visibility="{Binding IsInitialized, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=False}">

        <Border BorderBrush="{StaticResource ForegroundBrush}" BorderThickness=".5">
            <DockPanel>

                <!-- Top option Bar -->
                <Border DockPanel.Dock="Top" BorderBrush="{StaticResource ForegroundBrush}" BorderThickness=".5">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <WrapPanel Orientation="Horizontal">
                            <!-- Function Buttons -->
                            <Button Content="Auto-Assign" MinWidth="120"
                                    Command="{Binding GenerateRosterCommand}"/>
                            <Button Content="Clear Shifts" MinWidth="120"
                                    Command="{Binding ClearShiftsCommand}"/>

                            <!-- Filter -->
                            <Label Content="Filter:"/>
                            <TextBox Width="100"
                                     Text="{Binding FilterString, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            
                            <!-- Add Missing Rosters -->
                            <Button MinWidth="120"
                                    Command="{Binding GenerateAdditionalRostersCommand}"
                                    CommandParameter="Missing"
                                    Visibility="{Binding IsMissingRoster, Converter={StaticResource BooleanToVisibilityConverter}}">
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Foreground="Red"
                                               FontSize="10"
                                               VerticalAlignment="Center">
                                        <Run>(</Run>
                                        <Run Text="{Binding EmployeesWithoutRosterCount, Mode=OneWay}"/>
                                        <Run>)</Run>
                                    </TextBlock>
                                    <TextBlock Text=" Add Missing "></TextBlock>
                                </StackPanel>
                            </Button>
                            <!-- Add borrowed employee rosters -->
                            <Button MinWidth="120"
                                    Command="{Binding GenerateAdditionalRostersCommand}"
                                    CommandParameter="Loan"
                                    Content="Loan Rosters"/>
                        </WrapPanel>
                        <ToggleButton Grid.Column="1" x:Name="TogglePopupButton" HorizontalAlignment="Left"
                                      Padding="5,0" Margin="5,5" Content="☰"/>

                        <Popup Grid.Column="1" IsOpen="{Binding IsChecked, ElementName=TogglePopupButton}">
                            <Border BorderThickness="1" BorderBrush="{StaticResource CheckBoxBorderBrush}">
                                <StackPanel Orientation="Vertical">
                                    <Button Content="Public Holidays"
                                            Command="{Binding LaunchPublicHolidayManagerCommand}"/>
                                </StackPanel>
                            </Border>
                        </Popup>

                    </Grid>
                </Border>

                <!-- Targets -->
                <Border DockPanel.Dock="Top"
                        BorderBrush="{StaticResource ForegroundBrush}" BorderThickness=".5"
                        Padding="5">

                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <StackPanel Grid.Column="0" Orientation="Horizontal">
                            <!-- Shift Target Bypass option -->
                            <CheckBox IsChecked="{Binding ExceedTargets, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                      ToolTip="Exceed weekly default shift target."/>

                            <TextBlock Foreground="{Binding SufficientWeeklyShiftTargets, Converter={StaticResource BoolToColourConverter}}"
                                       FontSize="10" 
                                       VerticalAlignment="Center" HorizontalAlignment="Center"
                                       Margin="0,0,8,0"
                                       ToolTip="Total Employee Count :: Required Rosters / Total Shift Target">
                                <Run>( </Run>
                                <Run Text="{Binding DisplayRosters.Count, Mode=OneWay}"/>
                                <Run> :: </Run>
                                <Run Text="{Binding RequiredWeeklyRosters, Mode=OneWay}"/>
                                <Run> / </Run>
                                <Run Text="{Binding TotalWeeklyShiftTargets, Mode=OneWay}"/>
                                <Run> )</Run>
                            </TextBlock> 

                            <!-- Shift Count Containers -->
                            <ItemsControl VerticalContentAlignment="Center"
                                          VerticalAlignment="Center"
                                          ItemsSource="{Binding ShiftTargets, Mode=OneWay, FallbackValue=''}">

                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <WrapPanel Orientation="Horizontal"/>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <Border BorderBrush="{StaticResource ForegroundBrush}"
                                            BorderThickness=".5">
                                            <Grid MinWidth="90">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                </Grid.ColumnDefinitions>
                                                <Label Grid.Column="0" 
                                                       Content="{Binding Shift.Name, Mode=OneTime, FallbackValue=''}"
                                                       HorizontalAlignment="Center"
                                                       Margin="0"
                                                       FontSize="12"
                                                       FontWeight="Bold"/>
                                                <Label Grid.Column="1"
                                                       Content="{Binding Count, Mode=OneWay}"
                                                       HorizontalAlignment="Center"
                                                       Margin="0"
                                                       FontSize="12"
                                                       FontWeight="Bold"/>
                                                <Label Grid.Column="2"
                                                       Content="/"/>
                                                <TextBox Grid.Column="3" Text="{Binding Target, Mode=TwoWay, UpdateSourceTrigger=LostFocus}"
                                                         PreviewTextInput="ShiftTarget_OnPreviewTextInput"
                                                         MinHeight="0"
                                                         Height="20"
                                                         Padding="0"
                                                         FontSize="12"
                                                         MinWidth="20"
                                                         VerticalContentAlignment="Center"
                                                         HorizontalAlignment="Center"
                                                         HorizontalContentAlignment="Center"
                                                         GotKeyboardFocus="TextBox_GotKeyboardFocus"
                                                         LostMouseCapture="TextBox_LostMouseCapture"
                                                         LostKeyboardFocus="TextBox_LostKeyboardFocus"
                                                         LostFocus="ShiftTarget_LostFocus"
                                                         TextChanged="ShiftTarget_Changed"/>
                                            </Grid>
                                        </Border>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>

                            <ToggleButton IsChecked="{Binding LinkTargets}" 
                                          Margin="2,0"
                                          Padding="0"
                                          VerticalAlignment="Center"
                                          ToolTip="Link Daily Targets to Weekly">
                                <Image Source="../../../Resources/link.png"
                                       Height="20" Width="20"
                                       Margin="0"/>
                            </ToggleButton>
                        </StackPanel>

                        <Expander Grid.Column="1" ExpandDirection="Right">

                            <!-- Headers (Employee => Dailies) -->
                            <Border BorderBrush="{StaticResource ForegroundBrush}" BorderThickness=".5">
                                <Grid>
                                    <WrapPanel Orientation="Horizontal">
                                        <rosters:DailyRosterView DataContext="{Binding MondayRoster}"/>
                                        <rosters:DailyRosterView DataContext="{Binding TuesdayRoster}"/>
                                        <rosters:DailyRosterView DataContext="{Binding WednesdayRoster}"/>
                                        <rosters:DailyRosterView DataContext="{Binding ThursdayRoster}"/>
                                        <rosters:DailyRosterView DataContext="{Binding FridayRoster}"/>
                                        <Grid Visibility="{Binding UseSaturdays, Converter={StaticResource BooleanToVisibilityConverter}}">
                                            <rosters:DailyRosterView DataContext="{Binding SaturdayRoster}"/>
                                        </Grid>
                                        <Grid Visibility="{Binding UseSundays, Converter={StaticResource BooleanToVisibilityConverter}}">
                                            <rosters:DailyRosterView DataContext="{Binding SundayRoster}"/>
                                        </Grid>
                                    </WrapPanel>
                                </Grid>

                            </Border>
                        </Expander>
                    </Grid>
                </Border>

                <!-- Selected Employee(Roster) -->
                <ScrollViewer DockPanel.Dock="Bottom"
                              CanContentScroll="True"
                              HorizontalScrollBarVisibility="Auto"
                              VerticalScrollBarVisibility="Hidden"
                              Visibility="{Binding ShowActive, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <rosters:ActiveEmployeeRosterView DataContext="{Binding SelectedRoster, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                </ScrollViewer>


                <!-- Employee Rosters -->
                <DataGrid ItemsSource="{Binding DisplayRosters, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          SelectedItem="{Binding SelectedRoster, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto"
                          AutoGenerateColumns="True"
                          AutoGeneratingColumn="DataGrid_OnAutoGeneratingColumn"
                          AutoGeneratedColumns="DataGrid_OnAutoGeneratedColumns"
                          CanUserResizeColumns="True"
                          CanUserAddRows="False"
                          CanUserDeleteRows="False"
                          CanUserSortColumns="True"
                          CanUserReorderColumns="False"
                          CanUserResizeRows="True"
                          SelectionMode="Single"
                          RowHeight="25">
                    <DataGrid.ColumnHeaderStyle>
                        <Style TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource DataGridColumnHeaderStyle}">
                            <Setter Property="FontSize" Value="13"/>
                            <Setter Property="FontWeight" Value="Bold"/>
                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                        </Style>
                    </DataGrid.ColumnHeaderStyle>
                    <DataGrid.CellStyle>
                        <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource DataGridCellStyle}">
                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                            <Setter Property="FontSize" Value="12"/>
                            <Setter Property="FontWeight" Value="Bold"/>
                        </Style>
                    </DataGrid.CellStyle>
                </DataGrid>
            </DockPanel>
        </Border>
    </DockPanel>
</UserControl>
