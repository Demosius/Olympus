<Page x:Class="Prometheus.View.PrometheusPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:vm="clr-namespace:Prometheus.ViewModel"
      mc:Ignorable="d" 
      d:DesignHeight="450" d:DesignWidth="800"
      Title="PrometheusPage">

    <Page.DataContext>
        <vm:PrometheusVM/>
    </Page.DataContext>

    <DockPanel>
        <ListView Width="Auto"
                  MinWidth="100"
                  DockPanel.Dock="Left"
                  SelectedValue="{Binding SelectedCategory, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                  ItemsSource="{Binding Categories}">
            <ListView.ItemTemplate>
                <DataTemplate>
                    <TextBlock Text="{Binding Name}" FontSize="14"/>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>
        <ListView DockPanel.Dock="Left"
                  Width="Auto"
                  MinWidth="100"
                  SelectedValue="{Binding SelectedType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                  ItemsSource="{Binding Types}">
            <ListView.ItemTemplate>
                <DataTemplate>
                    <TextBlock Text="{Binding Name}"/>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>
        <Frame Background="#ECC"
               Content="{Binding CurrentPage, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"              
               Height="Auto" 
               HorizontalAlignment="Stretch" 
               VerticalAlignment="Stretch"
               BorderThickness="1" 
               BorderBrush="SlateGray"
               NavigationUIVisibility="Hidden"/>
    </DockPanel>

    <Page.Resources>
        <!--Listview Styling-->
        <Style TargetType="ListView">
            <Setter Property="Background" Value="#500"/>
            <Setter Property="BorderBrush" Value="SlateGray"/>
        </Style>
        <!--Listview Item Styling-->
        <Style TargetType="ListViewItem">
            <Setter Property="Background" Value="#500"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="10"/>
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="TextBlock.Margin" Value="2" />
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="BorderBrush" Value="Orange"/>
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="Foreground" Value="Orange"/>
                </Trigger>
            </Style.Triggers>
            <Style.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="2"/>
                </Style>
                <LinearGradientBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" EndPoint="0,1" StartPoint="0,0">
                    <GradientStop Color="PaleVioletRed" Offset="0"/>
                    <GradientStop Color="MediumVioletRed" Offset="1"/>
                </LinearGradientBrush>
            </Style.Resources>
        </Style>

        <!--Standard Button Styling-->
        <Style x:Key="StandardButton" TargetType="Button">
            <Setter Property="Margin" Value="5"/>
            <Setter Property="MinHeight" Value="20"/>
            <Setter Property="MinWidth" Value="20"/>
            <Setter Property="Background" Value="WhiteSmoke" />
            <Setter Property="TextBlock.TextAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontFamily" Value="Arial" />
            <Style.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="3"/>
                </Style>
            </Style.Resources>
        </Style>

        <!--Pagination Button Styling-->
        <Style x:Key="PageButton" TargetType="Button" BasedOn="{StaticResource StandardButton}">
            <Setter Property="Background" Value="{DynamicResource PinkGradient}" />
            <Setter Property="BorderBrush" Value="Black"/>
            <Setter Property="FontSize" Value="25"/>
        </Style>

        <!--IPP Button Styling-->
        <Style x:Key="IPPButton" TargetType="RadioButton" BasedOn="{StaticResource {x:Type ToggleButton}}">
            <Setter Property="TextBlock.TextAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontSize" Value="12" />
            <Setter Property="FontFamily" Value="Arial" />
            <Setter Property="Background" Value="{DynamicResource OrangeGradient}" />
            <Setter Property="BorderBrush" Value="Black" />
            <Style.Triggers>
                <Trigger Property="IsChecked" Value="{x:Null}">
                    <Setter Property="Background" Value="Red" />
                </Trigger>
            </Style.Triggers>
            <Style.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="3"/>
                </Style>
            </Style.Resources>
        </Style>

        <!--CornerButton-->
        <Style TargetType="Button" x:Key="{ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}">
            <Setter Property="Background" Value="Black" />
        </Style>
        <!-- DataGrid style -->
        <Style x:Key="DataGridStyle" TargetType="{x:Type DataGrid}">
            <Setter Property="ColumnHeaderStyle" Value="{DynamicResource ColumnHeaderStyle}"/>
            <Setter Property="RowHeaderStyle" Value="{DynamicResource RowHeaderStyle}" />
            <Setter Property="RowBackground" Value="{DynamicResource ResourceKey=RedGradient}" />
            <Setter Property="Background" Value="#500" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="BorderBrush" Value="SlateGray" />
            <Setter Property="RowHeight" Value="20" />
            <Setter Property="AllowDrop" Value="True" />
            <Setter Property="Block.TextAlignment" Value="Right" />
        </Style>
        <!-- DataGridColumnHeader style -->
        <Style x:Key="ColumnHeaderStyle" TargetType="DataGridColumnHeader">
            <Setter Property="Height" Value="30"/>
            <Setter Property="Padding" Value="8,0,8,0"/>
            <Setter Property="Background" Value="#500"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="TextElement.FontStretch" Value="Expanded"/>
            <Setter Property="FontSize" Value="16" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="BorderBrush" Value="Black" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="ToolTip" Value="Click to sort."/>
                </Trigger>
            </Style.Triggers>
            <Style.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="2"/>
                </Style>
                <LinearGradientBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" EndPoint="0,1" StartPoint="0,0">
                    <GradientStop Color="PaleVioletRed" Offset="0"/>
                    <GradientStop Color="MediumVioletRed" Offset="1"/>
                </LinearGradientBrush>
            </Style.Resources>
        </Style>
        <!-- DataGridRowHeader style -->
        <Style x:Key="RowHeaderStyle" TargetType="DataGridRowHeader">
            <Setter Property="Height" Value="Auto" />
            <Setter Property="Width" Value="16" />
            <Setter Property="BorderBrush" Value="Black" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Background" Value="{DynamicResource ResourceKey=BoneGradient}" />
            <Style.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="5"/>
                </Style>
                <LinearGradientBrush x:Key="BoneGradient" x:Name="BoneGradient" StartPoint="1,1" EndPoint="0,0" >
                    <GradientStop Color="Tan" Offset="0"/>
                    <GradientStop Color="Ivory" Offset="1"/>
                </LinearGradientBrush>
            </Style.Resources>
        </Style>

        <!--DataGridCells-->
        <Style  TargetType="{x:Type DataGridCell}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=Content.Text, RelativeSource={RelativeSource Self}}"  Value="" >
                    <Setter Property="Background" Value="DarkRed"/>
                </DataTrigger>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="FontWeight" Value="Bold"/>
                </Trigger>
            </Style.Triggers>
            <Style.Resources>
                <LinearGradientBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" EndPoint="0,1" StartPoint="0,0">
                    <GradientStop Color="PaleVioletRed" Offset="0"/>
                    <GradientStop Color="MediumVioletRed" Offset="1"/>
                </LinearGradientBrush>
            </Style.Resources>
        </Style>

        <!-- TreeView Style -->
        <Style TargetType="{x:Type TreeView}">
            <Setter Property="Background" Value="#500"/>
            <Setter Property="BorderBrush" Value="SlateGray"/>
        </Style>
        <!--TreeViewItemStyle-->
        <Style TargetType="{x:Type TreeViewItem}">
            <Setter Property="Background" Value="#500"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="24"/>
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="TextBlock.Margin" Value="2" />
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="BorderBrush" Value="Orange"/>
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="Foreground" Value="Orange"/>
                </Trigger>
            </Style.Triggers>
            <Style.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="2"/>
                </Style>
                <LinearGradientBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" EndPoint="0,1" StartPoint="0,0">
                    <GradientStop Color="PaleVioletRed" Offset="0"/>
                    <GradientStop Color="MediumVioletRed" Offset="1"/>
                </LinearGradientBrush>
            </Style.Resources>
        </Style>

        <LinearGradientBrush x:Key="RedGradient" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="DarkRed" Offset="0"/>
            <GradientStop Color="#500" Offset="1"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="ReVGradient" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#500" Offset="0"/>
            <GradientStop Color="DarkRed" Offset="1"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="PinkGradient" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="PaleVioletRed" Offset="0"/>
            <GradientStop Color="MediumVioletRed" Offset="1"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="OrangeGradient" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="DarkOrange" Offset="0"/>
            <GradientStop Color="Orange" Offset="1"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="MedRedGradiant" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="IndianRed" Offset="0"/>
            <GradientStop Color="IndianRed" Offset="1"/>
        </LinearGradientBrush>
    </Page.Resources>
</Page>